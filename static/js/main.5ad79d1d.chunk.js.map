{"version":3,"sources":["TodoItem/TodoItem.js","TodoItem/index.js","TodoList/TodoList.js","TodoList/index.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["containStyles","marginTop","TodoItem","createTasks","item","className","Box","bgcolor","color","p","m","Grid","container","direction","justify","alignItems","text","Button","variant","onClick","props","deleteItem","key","ListItems","this","entries","map","Container","maxWidth","style","Component","css","fontSize","textAlign","input","button","marginLeft","TodoList","onSubmit","AddItem","TextField","type","ref","inputElement","value","currentItem","onChange","handleInput","IconButton","aria-albel","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","auth","storage","GoogleAuthProvider","messaging","App","event","target","Date","now","setState","e","preventDefault","newItem","state","items","jsonItems","JSON","stringify","localStorage","setItem","filteredItems","filter","console","log","parse","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad79d1d.chunk.js","sourcesContent":["\r\nimport {Component} from 'react'\r\nimport './index.css'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst containStyles = {\r\n    marginTop: '10px'\r\n}\r\n\r\nclass TodoItem extends Component {\r\n    createTasks = item => {\r\n        return(\r\n            <div className = 'TodoList' key={item.key}>\r\n                <Box className \r\n                    bgcolor='primary.main'\r\n                    color='primary.contrastText'\r\n                    p={2}\r\n                    m={2}\r\n                >\r\n                <Grid\r\n                     container\r\n                     direction='row'\r\n                     justify='space-around'\r\n                     alignItems='center'\r\n                >  \r\n                <div> {item.text} </div>\r\n                <Button variant='contained' color='secondary'\r\n                    onClick = {() => this.props.deleteItem(item.key)}>\r\n                    Done\r\n                </Button>\r\n                </Grid>\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        const listEn = this.props.entries\r\n        const ListItems = listEn.map(this.createTasks)\r\n        return <Container maxWidth='sm'style= {containStyles}> {ListItems} </Container>\r\n    }\r\n}\r\nexport default TodoItem","import TodoItem from './TodoItem'\r\n\r\nexport default TodoItem","import {Component} from 'react'\r\nimport './index.css'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst css = {\r\n    color: 'red',\r\n    fontSize: '20px',\r\n    textAlign: 'center'\r\n  }\r\n  const input = {\r\n    fontSize: '20px',\r\n    color: 'red'\r\n  }\r\n  const button = {\r\n    marginLeft: '10px'\r\n  }\r\n\r\nclass TodoList extends Component {\r\n    render(){\r\n    return (\r\n        <div className=\"App\" style={css}>\r\n             <h1> Todo </h1>\r\n             <form onSubmit = {this.props.AddItem}>\r\n              <TextField\r\n               type='text' style={input}\r\n               ref={this.props.inputElement}\r\n               value = {this.props.currentItem.item}\r\n               onChange = {this.props.handleInput}\r\n               />\r\n               <IconButton \r\n                  type='submit'\r\n                  aria-albel='add'\r\n                  color='secondary'\r\n                  style={button}\r\n               >\r\n                 <AddIcon/>\r\n               </IconButton>\r\n             </form>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nexport default TodoList","import TodoList from './TodoList'\r\n\r\nexport default TodoList","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyALwu5ewRmZmvUB20sxeA0SX9oGMiUJ4AY\",\r\n    authDomain: \"todo-b816f.firebaseapp.com\",\r\n    projectId: \"todo-b816f\",\r\n    storageBucket: \"todo-b816f.appspot.com\",\r\n    messagingSenderId: \"10092302086\",\r\n    appId: \"1:10092302086:web:210f6c5831d91f1ea49887\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase\r\nexport const database = firebase.database()\r\nexport const auth = firebase.auth()\r\nexport const storage = firebase.storage()  // это для файлов\r\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const messaging = firebase.messaging()\r\n// будет деплоиться на github в отдельной папке или на firebase","\nimport './App.css';\nimport {Component} from 'react'\nimport TodoItem from './TodoItem';\nimport TodoList from './TodoList';\nimport database from './firebase'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      items:[],\n      currentItem: {text: 'Первое дело', key:'firstItem'}\n      //Дергаем LocalStorage при загрузке ComponentDidmount\n    }\n    // const databaseRef = database.ref()\n    // const todosRef = databaseRef.child('todos')\n  }\n  handleInput = event => {\n    const itemText = event.target.value\n    const currentItem = {text: itemText, key: Date.now()}\n    this.setState({\n      currentItem,      \n    })\n  }\n  AddItem = e => {\n    e.preventDefault()\n    const newItem = this.state.currentItem;\n    if(newItem.text !== '') {\n      const items = [...this.state.items, newItem]\n      this.setState({\n        items,\n        currentItem:{text:'', key:''}\n      })\n      //после обновления state обновляем и localstorage\n      const jsonItems = JSON.stringify(items)\n      localStorage.setItem('items', jsonItems)\n      // todosRef.push(currentItem)\n    }\n  }\n  deleteItem = key => {\n    const filteredItems = this.state.items.filter(item => {\n      return item.key !== key\n    })\n\n    console.log(filteredItems)\n    this.setState({\n      items: filteredItems,\n    })\n    //текущий отфильтрованный items законсервировать в json\n    // обновить значение items в localStorage\n    const items = JSON.stringify(filteredItems)\n    localStorage.setItem('items', items)\n  }\n\n  componentDidMount() {\n    const items = JSON.parse(localStorage.getItem('items'))\n    if(items){\n      this.setState({\n        items,\n      })\n    } else{\n      this.setState({\n        items:[]\n      })\n    }\n  }\n\n\n  render() {\n    return(\n      <div className='App'>\n        <TodoList\n          AddItem = {this.AddItem}\n          inputElement = {this.inputElement}\n          handleInput = {this.handleInput}\n          currentItem = {this.state.currentItem}\n        />\n        <TodoItem entries = {this.state.items} deleteItem = {this.deleteItem}/>\n      </div>\n    )\n  }\n}\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\nreportWebVitals();\n"],"sourceRoot":""}